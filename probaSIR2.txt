import matplotlib.pyplot as plt
import numpy as np
import random

n = 30 #broj dana
a = 3000 #broj agenata

zeros_array = np.zeros((a,a))
array1 = np.zeros(a)
array2 = np.zeros(a)
for i in range(0,a):
    array2[i] = 99999999999999     #vrednost mora biti mnogo veÄ‡a od broja agenata kako ne di doslo do greske
array1[0] = 1
array2[0] = 0
array3 = np.zeros(a)
array3[0] = 1
for i in range(0,a):
    for j in range(i+1,a):
        if i == j:
            zeros_array[i][j] = 0
        else:
            b = random.randint(0,100)
            if b <= 90:
                zeros_array[i][j] = 0
            else:
                zeros_array[i][j] = 1

array_sus = np.zeros(n)
array_inf = np.zeros(n)
array_rec = np.zeros(n)

for x in range (0, n):
    print(array2)
    print(array1)
    for i in range(0,a):
        for j in range(0,a):
            if zeros_array[i][j] == 1:
                c = random.randint(0,100)
                if array1[i] == 1:
                    if array1[j] == 0:
                        if c <= 90:
                            array3[j] = 0
                        else:
                            array3[j] = 1
                            array2[j] = x + 1 
                if array1[i] == 0:
                    if array1[j] == 1:
                        if c <= 90:
                            array3[i] = 0
                        else:
                            array3[i] = 1    
                            array2[i] = x + 1
        if x == array2[i] + 3:
            array3[i] = 2
        array1[i] = array3[i]
    inf = np.count_nonzero(array1 == 1)
    rec = np.count_nonzero(array1 == 2)
    sus = a - (inf + rec)
    array_sus[x] = sus
    array_inf[x] = inf
    array_rec[x] = rec
    print(inf,sus,rec)

array_n = np.arange(1,n+1)

fig = plt.figure()
ax = fig.add_subplot(111)
ax.plot(array_n, array_sus, 'b', alpha=0.5, lw=2, label='Susceptible')
ax.plot(array_n, array_inf, 'r', alpha=0.5, lw=2, label='Infected')
ax.plot(array_n, array_rec, 'g', alpha=0.5, lw=2, label='Recovered')
ax.set_xlabel('Time (days)')
ax.set_ylabel('Number of agents')
legend = ax.legend()
plt.show()